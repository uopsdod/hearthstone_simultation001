<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>SpringBoot_template02</groupId>
	<artifactId>SpringBoot_template02</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>war</packaging>

	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>1.5.2.RELEASE</version>
		<relativePath />
	</parent>

	<properties>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
		<jdk.version>1.8</jdk.version>
	</properties>

	<build>
		<plugins>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
			</plugin>
			
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>${jdk.version}</source>
					<target>${jdk.version}</target>
				</configuration>
			</plugin>			

			<plugin>
				<groupId>pl.project13.maven</groupId>
				<artifactId>git-commit-id-plugin</artifactId>
				<executions>
					<execution>
						<id>get-the-git-infos</id>
						<goals>
							<goal>revision</goal>
						</goals>
					</execution>
					<execution>
						<id>validate-the-git-infos</id>
						<goals>
							<goal>validateRevision</goal>
						</goals>
						<!-- *NOTE*: The default phase of validateRevision is verify, but in 
							case you want to change it, you can do so by adding the phase here -->
						<phase>package</phase>
					</execution>
				</executions>

				<configuration>
					<dotGitDirectory>${project.basedir}/.git</dotGitDirectory>
					<prefix>git</prefix>
					<dateFormat>dd.MM.yyyy '@' HH:mm:ss z</dateFormat>
					<dateFormatTimeZone>${user.timezone}</dateFormatTimeZone>
					<verbose>false</verbose>
					<generateGitPropertiesFile>true</generateGitPropertiesFile>
					<!-- <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename> -->
					<generateGitPropertiesFilename>${project.build.resources[0].directory}/git.properties</generateGitPropertiesFilename>
					<!-- <generateGitPropertiesFilename>${project.build.outputDirectory}/git.properties</generateGitPropertiesFilename> -->
					<!-- <generateGitPropertiesFilename>${project.basedir}/git.properties</generateGitPropertiesFilename> -->

					<format>properties</format>
					<skipPoms>true</skipPoms>
					<injectAllReactorProjects>false</injectAllReactorProjects>
					<failOnNoGitDirectory>true</failOnNoGitDirectory>
					<failOnUnableToExtractRepoInfo>true</failOnUnableToExtractRepoInfo>
					<skip>false</skip>
					<runOnlyOnce>false</runOnlyOnce>

					<excludeProperties>
					</excludeProperties>

					<includeOnlyProperties>
					</includeOnlyProperties>

					<useNativeGit>false</useNativeGit>
					<abbrevLength>7</abbrevLength>
					<commitIdGenerationMode>flat</commitIdGenerationMode>

					<gitDescribe>
						<skip>false</skip>
						<always>false</always>
						<abbrev>7</abbrev>
						<dirty>-dirty</dirty>
						<match>*</match>
						<tags>false</tags>
						<forceLongFormat>false</forceLongFormat>
					</gitDescribe>
					<validationProperties>
						<validationProperty>
							<name>validating project version</name>
							<value>${project.version}</value>
							<shouldMatchTo><![CDATA[^.*(?<!-SNAPSHOT)$]]></shouldMatchTo>
						</validationProperty>
					</validationProperties>
					<validationShouldFailIfNoMatch>true</validationShouldFailIfNoMatch>
				</configuration>
			</plugin>
			<!-- END OF GIT COMMIT ID PLUGIN CONFIGURATION -->


		</plugins>
	</build>

	<dependencies>
		<!-- Log4j 2 -->
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-api</artifactId>
		</dependency>
		<dependency>
			<groupId>org.apache.logging.log4j</groupId>
			<artifactId>log4j-core</artifactId>
		</dependency>
		<!-- gson -->
		<dependency>
			<groupId>com.google.code.gson</groupId>
			<artifactId>gson</artifactId>
		</dependency>
		<!-- spring boot - test -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-test</artifactId>
			<scope>test</scope>
		</dependency>
		<!-- spring - web application -->
		<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-web -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-web</artifactId>
		</dependency>
		<!-- spring - for war file setting -->
		<dependency>
			<groupId>org.springframework.boot</groupId>
			<artifactId>spring-boot-starter-tomcat</artifactId>
			<scope>provided</scope>
		</dependency>


		<!-- JSP - JSTL -->
		<dependency>
			<groupId>javax.servlet</groupId>
			<artifactId>jstl</artifactId>
		</dependency>

		<!-- JSP - Need this to compile JSP -->
		<dependency>
			<groupId>org.apache.tomcat.embed</groupId>
			<artifactId>tomcat-embed-jasper</artifactId>
			<scope>provided</scope>
		</dependency>

		<!-- JSP - Need this to compile JSP -->
		<dependency>
			<groupId>org.eclipse.jdt.core.compiler</groupId>
			<artifactId>ecj</artifactId>
			<version>4.6.1</version>
			<scope>provided</scope>
		</dependency>

	</dependencies>


</project>